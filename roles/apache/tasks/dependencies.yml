---

- name: Install Remi Collet Repository
  yum: name="http://rpms.famillecollet.com/enterprise/remi-release-7.rpm" state=present
  tags:
   - install
   - repository
   - remi collet


- name: Enable Remi Collet Repository for future updates
  shell: yum-config-manager --enable remi remi-php56
  tags:
   - enable
   - repository
   - remi collet


- name: Install Apache, PHP and its dependencies
  yum: name="{{ item }}" enablerepo=remi,remi-php56 state=present
  with_items:
    - httpd
    - php
    - php-common
    - php-cli
    - php-pear
    - php-mysqlnd
    - php-pecl-mongo
    - php-gd
    - php-mbstring
    - php-mcrypt
    - php-xml
  tags:
   - install
   - apache
   - php


- name: Install NodeJs and Node Package Manager (NPM)
  yum: name="{{ item }}" state=present
  with_items:
    - nodejs
    - npm
  tags:
   - install
   - nodejs
   - npm


- name: Configure proxies in NPM
  shell: 'npm config set {{ item.var_name }} {{ item.proxy_value }}'
  when: item.proxy_value  # if it is empty it does not execute it
  with_items:
    - { var_name: 'proxy', proxy_value: '{{ proxy_env.http_proxy }}' }
    - { var_name: 'https-proxy', proxy_value: '{{ proxy_env.https_proxy }}' }
  tags:
    - configure
    - proxy
    - nmp


- name: Make sure that proxies are not configured in NPM
  shell: 'npm config rm {{ item.var_name }}'
  when: not item.proxy_value  # if it is empty it does not execute it
  with_items:
    - { var_name: 'proxy', proxy_value: '{{ proxy_env.http_proxy }}' }
    - { var_name: 'https-proxy', proxy_value: '{{ proxy_env.https_proxy }}' }
  tags:
    - configure
    - proxy
    - nmp


- name: Install Bower
  npm: name=bower global=yes
  tags:
   - install
   - bower


- name: Install Git
  yum: name=git state=present
  tags:
   - install
   - git


- name: Install DeltaRPM
  yum: name=deltarpm state=present
  tags:
   - install
   - deltarpm


- name: Update CentOS
  yum: name=* state=latest
  tags:
   - update
   - centos


- name: Download Composer (without proxy)
  shell: "curl -sS https://getcomposer.org/installer | php"
  when: not proxy_env.https_proxy
  tags:
   - download
   - composer
   - global


- name: Download Composer (with proxy)
  shell: "curl --proxy {{ proxy_env.https_proxy }} -sS https://getcomposer.org/installer | php"
  when: proxy_env.https_proxy
  ignore_errors: True
  tags:
   - download
   - composer
   - global


- name: Install Composer and set global launch
  shell: 'mv {{ ansible_env.HOME }}/composer.phar /usr/local/bin/composer'
  tags:
   - install
   - composer
   - global


- name: Make composer executable by the user
  file:
    path: /usr/local/bin/composer
    state: file
    owner: '{{ ansible_env.USER }}'
    group: '{{ ansible_env.USER }}'
    mode: ug+x
  tags:
   - permissions
   - composer
   - global
